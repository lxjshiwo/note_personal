抽丝剥茧策略模式
    C&C接口详解
        Comparable & Comparator


        1.考虑类
            名词
        2.属性
            不可脱离实际的应用场景
            一般为private
        3.方法
        4.类之间的关系
        5.隐藏(封装)
            降低耦合度
            站在使用者角度考虑
            修改不如添加,扩展系统性
        6.继承
            考虑使用继承，
            继承关系耦合度较强，谨慎使用
                xxx是一种xxx
        7.多态
            只要包含abstract方法，类就称为抽象类
            可扩展性(Extensiblity)



        注意:
            设计没有绝对的对与错
            OverDesign是一种罪过
                *
            没有任何实际中的设计一步到位
            初学者不要考虑太多的原则和条条框框，重要的是手动实现
                抽象类与接口



Iterator
    容器与容器遍历
        主要使用在容器遍历中
        
            


            
            
