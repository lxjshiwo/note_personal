Linux 的任务计划，周期性任务执行
        未来某时间点执行一次任务：at, batch 
        周期性执行任务:cron

        电子邮件服务：
            smtp：simple mail transmission protocal ,用于传递邮件：
            pop3:post office protocal 
            imap4:Internet Mail Access Protocal 

        mailx - send and receive Internet mail        
            
            MUA: Mail User Agent    
            
            mailx [-s Subject] username[@hostname]
                邮件正文生成：
                    (1)直接输出，ctrl+D 
                    (2) 输入重定向
                    (3)通过管道;
                        echo -e "how are you?\n How old are you?" -mail 
            mailx   

        at命令：
        at [option] TIME

            TIME:
                HH:MM[YYYY-mm-dd]
                noon midnight teatime
                tommorrow
                now+#{minutes,hours,days,OR weeks}
            常用选项：
                -q QUEUE:
                -l:列出指定队列中等待运行的作业，相当于atq  
                -d:删除指定的作业,相当于atrm
                -c：查看具体的作业任务  
                -f /PATH/FROM/SOMEFILE从文件中读取任务：

            注意：作业结果以邮件形式通知给相关用户；

        batch命令：
            让系统自行选择空闲的时间去执行此处指定的任务

        周期性任务计划：cron 
            相关程序包;
                cronie:主程序包,提供crond守护进程以及相关辅助工具
                cronie-anacron:cronie 的补充程序，用于监控cronie 任务执行情况,如cronie 中的任务在过去该运行的时间内未能正常运行，则anacron会随后启动一次此任务
                crontabs:包括CentOS提供系统维护任务
                
                确保crond守护进程处于运行状态：
                    CentOS 7：
                        systemctl status crond 
                            ...runing...
                    CentOS 6:
                        service crond status 

            计划要周期性执行的任务提交给crond ,由其来实现到点运行   
                系统cron任务：
                    /etc/crontab
                用户cron任务：
                    crontab命令



                每天晚上9.10运行echo 命令
                    10 21 * * * gentoo /bin/echo "howdy"

                

                系统crond
                时间表示法:
                    (1)特定值
                        给定时间点有效取值范围内的值
                    (2)*
                        给定时间点上有效取值范围内的所有值
                        表示“每...”;
                    (3)离散取值,
                        #，#，#
                    (4) 连续取值
                        #-#
                    (5)在指定时间范围上，定义步长   
                        /#: #即为

            例如：每三小时echo命令；
                0 */3 * * * gentoo /bin/echo "howdy"

        每个用户都有crontab /usr/spool/cron/USRNAME
            crontab命令：
                crontab [-u user][-l| -r |-e ][-i][-s]
                    -l:列出所有任务：
                    -e:编辑任务：
                    -r:移除所有任务
                    -i:同-r 一同使用，以交互式模式让用户有选择的移除指定命令
                    -u user :仅root可以运行，代为指定用户管理cron任务；
            注意：运行结果以邮件形式通知用户：
            建议使用绝对 路径
                (1)COMMAND > /dev/null
                (2)COMMAND &> /dev/null

                对于cron任务来说，%有特殊用途：如果在命令中使用%，则需要转义，不过，把%放置于‘’号中也可以不转义
            思考：
                (1)如何在秒级别运行任务？
                    * * * * * for min in  0 1 2;do echo “hi ”  sleep 20;done
                (2)如何实现每7分钟运行一次任务？
                    
                sleep命令：
                    sleep NUMBER[sufix]
                        
                        SUFIX
                            s:秒，默认
                            m:分
                            h:小时
                            d:天

            练习：
                1,每个4小时备份一次/etc目录至/backup目录中，保存的文件名字为“etc--yyyy--mm-dd-hh.tar.xz ”
                2,每周2,4,7备份 /var/log/message文件到/logs目录中，文件名字形如“message-yyyymmdd”
                3,每两个小时取出当前系统/proc/meminfo文件中以s或m开头的信息追加到/tmp/meminfo.txt文件中，
                4,工作日时间内，每小时执行一次“ip addr show”命令
                    
                

            



                

